name: Build Workflow

on:
  push:
#    branches: master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.13.3'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller game.spec
      
      - name: Build Artifact (windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-executables
          path: dist/game/
      - name: Build Artifact (linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-executables
          path: dist/game/
      - name: Build Artifact (macos)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-executables
          path: dist/game/
      - name: Zip Release
        run: |
          tar acvf dist/game.zip dist/game
      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat version.txt)"

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.getversion.outputs.version }}
          release_name: ${{ steps.getversion.outputs.version }} - ${{ github.event.commits[0].message }}
          body: |
            # Release ${{ steps.getversion.outputs.version }}
            Changelog not added here since this was automated, sorry
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: dist/game.zip
          asset_name: DashyDash.zip
          asset_content_type: application/zip